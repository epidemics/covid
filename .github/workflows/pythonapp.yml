name: covid

on: [push]

env:
  IMAGE_NAME: covid

jobs:
  checks:
    name: checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Black Code Formatter
      uses: lgeiger/black-action@v1.0.1
      with:
        args: "src/ tests/ --check"

  pretify-js:
    runs-on: ubuntu-latest
    steps:
    - name: Cloning the repository
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Prettify the JS Code
      uses: creyD/prettier_action@v2.0
      with:
        prettier_options: 'prettier --check "{src/server/static/**, src/server/templates/**}"'
        branch: ${{ github.head_ref }}

  tests:
    name: tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: 3.8
    - run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        source $HOME/.poetry/env
        poetry install
        poetry run pytest tests

  setup-build-publish-deploy:
    if: contains(github.ref, 'staging') || contains(github.ref, 'master')
    name: Build, Publish, Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.SA_EMAIL }}
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        gcloud auth configure-docker

    # Build the Docker image
    - name: Build
      run: |
        docker build -t gcr.io/${{ secrets.GKE_PROJECT }}/$IMAGE_NAME:$GITHUB_SHA --target production .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push gcr.io/${{ secrets.GKE_PROJECT }}/$IMAGE_NAME:$GITHUB_SHA

    - name: Helm deploy [STAGING]
      if: contains(github.ref, 'staging')
      uses: hahow/install-helm-chart-action@v1.0.0
      with:
        gcloud_auth_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        gcloud_project_id: ${{ secrets.GKE_PROJECT }}
        cluster_name: epidemics
        cluster_region: us-west1-c
        release_namespace: staging
        release_name: covid
        chart_name: ./deploy/chart
        helm_upgrade_args: |
          --values ./deploy/chart/values.yaml
          --values ./deploy/chart/values.staging.yaml
          --set imageName=gcr.io/${{ secrets.GKE_PROJECT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          --debug

    # TODO: violates DRY, simplify with the above
    - name: Helm deploy [PRODUCTION (master branch)]
      if: contains(github.ref, 'master')
      uses: hahow/install-helm-chart-action@v1.0.0
      with:
        gcloud_auth_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        gcloud_project_id: ${{ secrets.GKE_PROJECT }}
        cluster_name: epidemics
        cluster_region: us-west1-c
        release_namespace: production
        release_name: covid
        chart_name: ./deploy/chart
        helm_upgrade_args: |
          --values ./deploy/chart/values.yaml
          --values ./deploy/chart/values.production.yaml
          --set imageName=gcr.io/${{ secrets.GKE_PROJECT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          --debug