apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-web-server
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/component: web-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.web.replicasCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: web-server
  template:
    metadata:
      name: {{ .Release.Name }}-web-server
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: web-server
      annotations:  # Force deployment update on config change
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Release.Name }}-web-server
          image: {{ .Values.imageName }}
          imagePullPolicy: Always
          # TODO: solve via entrypoint
          command:
          - uvicorn
          - main:app
          - --host
          - 0.0.0.0
          ports:
          - containerPort: 8000
          workingDir: "/usr/app/src/server"
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}
            - secretRef:
                name: {{ .Chart.Name }}
          resources:
            requests:
              cpu: {{ .Values.web.cpuRequest | quote }}
              memory: {{ .Values.web.memoryRequest | quote}}
            limits:
              cpu: {{ .Values.web.cpuLimit | quote }}
              memory: {{ .Values.web.memoryLimit | quote }}
          livenessProbe:
            httpGet:
              path: "/"
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/"
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
